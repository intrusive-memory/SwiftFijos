name: Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: Run Tests
    runs-on: macos-26

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Show Swift version
        run: swift --version

      - name: Build
        run: swift build

      - name: Run tests with coverage
        run: swift test --enable-code-coverage

      - name: Generate coverage report
        run: |
          # Find the xcresult bundle
          XCRESULT=$(find .build -name '*.xcresult' | head -n 1)

          if [ -z "$XCRESULT" ]; then
            echo "No xcresult found, trying alternative approach..."
            # Use llvm-cov with the correct paths for macOS
            xcrun llvm-cov export -format="lcov" \
              .build/debug/SwiftFijosPackageTests.xctest/Contents/MacOS/SwiftFijosPackageTests \
              -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
          else
            # Convert xccov report to lcov format
            xcrun xccov view --report --json "$XCRESULT" > coverage.json

            # Convert JSON to a simple text report for GitHub
            echo "# Code Coverage Report" > coverage.md
            echo "" >> coverage.md
            xcrun xccov view --report "$XCRESULT" >> coverage.md
          fi

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && hashFiles('coverage.md') != ''
        with:
          recreate: true
          path: coverage.md

      - name: Write to Job Summary
        if: hashFiles('coverage.md') != ''
        run: cat coverage.md >> $GITHUB_STEP_SUMMARY
